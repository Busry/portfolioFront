{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uPAuIeA,MAjIf,WACE,OACE,yBAAKC,UAAU,OACb,yBACEA,UAAU,wDACVC,GAAG,WAEH,yBAAKD,UAAU,aACb,uBAAGA,UAAU,iCAAiCE,KAAK,aAAnD,mBAGA,4BACEF,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,oBACZC,gBAAc,mBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMR,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BC,GAAG,oBAC3C,wBAAID,UAAU,sBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,UAA/C,UAIF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,aAA/C,aAIF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,YAA/C,gBASV,4BAAQF,UAAU,yBAChB,yBAAKA,UAAU,yBACb,wDACA,uBAAGA,UAAU,QAAb,gEAMJ,6BAASC,GAAG,SACV,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,+CACA,uBAAGA,UAAU,QAAb,2MAMA,4BACE,uFACA,0GAIA,gIAIA,iHAUV,6BAASC,GAAG,WAAWD,UAAU,YAC/B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,iDACA,uBAAGA,UAAU,QAAb,uOAWR,6BAASC,GAAG,WACV,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,0CACA,uBAAGA,UAAU,QAAb,iOAWR,4BAAQA,UAAU,gBAChB,yBAAKA,UAAU,aACb,uBAAGA,UAAU,8BAAb,wCChHUS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5894006b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// import Names from './components/names';\n// import Head from './components/head';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\n        id=\"mainNav\"\n      >\n        <div className=\"container\">\n          <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">\n            Start Bootstrap\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link js-scroll-trigger\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link js-scroll-trigger\" href=\"#services\">\n                  Services\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link js-scroll-trigger\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <header className=\"bg-primary text-white\">\n        <div className=\"container text-center\">\n          <h1>Welcome to Scrolling Nav</h1>\n          <p className=\"lead\">\n            A landing page template freshly redesigned for Bootstrap 4\n          </p>\n        </div>\n      </header>\n\n      <section id=\"about\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8 mx-auto\">\n              <h2>About this page</h2>\n              <p className=\"lead\">\n                This is a great place to talk about your webpage. This template\n                is purposefully unstyled so you can use it as a boilerplate or\n                starting point for you own landing page designs! This template\n                features:\n              </p>\n              <ul>\n                <li>Clickable nav links that smooth scroll to page sections</li>\n                <li>\n                  Responsive behavior when clicking nav links perfect for a one\n                  page website\n                </li>\n                <li>\n                  Bootstrap's scrollspy feature which highlights which section\n                  of the page you're on in the navbar\n                </li>\n                <li>\n                  Minimal custom CSS so you are free to explore your own unique\n                  design options\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section id=\"services\" className=\"bg-light\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8 mx-auto\">\n              <h2>Services we offer</h2>\n              <p className=\"lead\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aut\n                optio velit inventore, expedita quo laboriosam possimus ea\n                consequatur vitae, doloribus consequuntur ex. Nemo assumenda\n                laborum vel, labore ut velit dignissimos.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section id=\"contact\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8 mx-auto\">\n              <h2>Contact us</h2>\n              <p className=\"lead\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero\n                odio fugiat voluptatem dolor, provident officiis, id iusto!\n                Obcaecati incidunt, qui nihil beatae magnam et repudiandae ipsa\n                exercitationem, in, quo totam.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <footer className=\"py-5 bg-dark\">\n        <div className=\"container\">\n          <p className=\"m-0 text-center text-white\">\n            Copyright &copy; Your Website 2020\n          </p>\n        </div>\n      </footer>\n      {/* <Head />\n      <Names /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import './assets/css/bootstrap.min.css';\nimport './assets/css/scrolling-nav.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}